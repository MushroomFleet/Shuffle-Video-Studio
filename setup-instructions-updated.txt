# Video Processing Tools

This project contains scripts to split videos into segments and randomize their filenames using various methods.

## Setup Instructions

1. Create a virtual environment:
```bash
python -m venv venv
```

2. Activate the virtual environment:
- Windows:
```bash
.\venv\Scripts\activate
```
- Linux/Mac:
```bash
source venv/bin/activate
```

3. Install requirements:
```bash
pip install -r requirements.txt
```

## Splitter Scripts

### Version 1 (video-splitter-v1.py)
- Edit the script to specify your video filename
- Splits into 2-second segments
- Run: `python video-splitter-v1.py`

### Version 2 (video-splitter-v2.py)
- Run: `python video-splitter-v2.py`
- Enter the video filename when prompted
- Splits into 2-second segments

### Version 3 (video-splitter-v3.py)
- Run: `python video-splitter-v3.py`
- Enter the video filename when prompted
- Enter desired clip duration (1-3600 seconds)
- Creates clips of specified length

All splitter versions will:
- Create a 'split_clips' directory
- Split the video into segments
- Save clips as MP4 files

## Shuffler Scripts

### Version 2 (Shuffle_Splits_v2.py)
Run: `python Shuffle_Splits_v2.py`

Offers two shuffle methods:

1. Simple Shuffle:
   - Finds all clips in 'split_clips' directory matching 'clip_XXXX.mp4'
   - Renames files with random 8-character hex codes
   - New format: 'shuffle_XXXXXXXX.mp4'

2. Size Reward Shuffle:
   - Analyzes file sizes to identify clips with more action/content
   - User can specify the reward percentage (1-100%)
   - Process:
     1. Orders clips by file size (larger files typically contain more action)
     2. Renames files with size information
     3. Copies top percentage of clips to 'reward' folder
     4. Applies random hex names to reward clips
   - Final format in reward folder: 'reward_XXXXXXXX.mp4'

Features:
- Customizable reward percentage
- Size-based analysis
- Progress tracking for each stage
- Error handling and validation
- User confirmation steps

## Project Structure
```
video-tools/
├── requirements.txt
├── video-splitter-v1.py
├── video-splitter-v2.py
├── video-splitter-v3.py
├── Shuffle_Splits_v2.py
└── README.md
```

## Workflow Example
1. Split a video using any splitter version
2. Wait for splitting to complete
3. Run Shuffle_Splits_v2.py
4. Choose shuffle method:
   - Simple: Randomized names in original folder
   - Size Reward: Top percentage in new 'reward' folder
5. Find your processed clips in respective folders

## Technical Notes
- Place your video file in the same directory as the scripts
- Requires Python 3.6 or higher
- Maximum clip duration is 3600 seconds (1 hour)
- Shuffling process cannot be automatically undone
- Back up your files before shuffling if needed
- Size Reward method uses file size as a proxy for content interest
- Larger MP4 files typically indicate more movement/changes in the video

## Size Reward Logic
The Size Reward shuffle uses file size as an indicator of clip content because:
- MP4 compression is more efficient on static/simple scenes
- High movement and visual changes result in larger file sizes
- Brighter scenes typically result in larger files than dark scenes
- More complex scenes require more data to encode

This means that larger files are more likely to contain interesting content, while smaller files might be static or dark scenes.
